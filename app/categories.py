# app/categories.py
"""–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ —Ä–∞—Å—Ö–æ–¥–æ–≤ –¥–ª—è Finance Bot"""

from typing import Dict, List, Optional
from dataclasses import dataclass


@dataclass
class Category:
    """–ú–æ–¥–µ–ª—å –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ —Ä–∞—Å—Ö–æ–¥–æ–≤"""
    id: str
    name: str
    emoji: str
    keywords: List[str]
    description: str = ""


# –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ —Ä–∞—Å—Ö–æ–¥–æ–≤
STANDARD_CATEGORIES = {
    "nutrition": Category(
        id="nutrition",
        name="–ü–∏—Ç–∞–Ω–∏–µ",
        emoji="üçé",
        keywords=[
            "—Ö–ª–µ–±", "–º–æ–ª–æ–∫–æ", "–º—è—Å–æ", "–∫—É—Ä–∏—Ü–∞", "–≥–æ–≤—è–¥–∏–Ω–∞", "—Å–≤–∏–Ω–∏–Ω–∞", "—Ä—ã–±–∞",
            "–æ–≤–æ—â–∏", "—Ñ—Ä—É–∫—Ç—ã", "—è–±–ª–æ–∫–∏", "–±–∞–Ω–∞–Ω—ã", "–∞–ø–µ–ª—å—Å–∏–Ω—ã", "–ø–æ–º–∏–¥–æ—Ä—ã",
            "–æ–≥—É—Ä—Ü—ã", "–∫–∞—Ä—Ç–æ—Ñ–µ–ª—å", "–ª—É–∫", "–º–æ—Ä–∫–æ–≤—å", "—Å—ã—Ä", "–π–æ–≥—É—Ä—Ç", "—Ç–≤–æ—Ä–æ–≥",
            "–º–∞—Å–ª–æ", "—è–π—Ü–∞", "–∫–æ–ª–±–∞—Å–∞", "—Å–æ—Å–∏—Å–∫–∏", "–∫–æ–Ω—Å–µ—Ä–≤—ã", "–∫—Ä—É–ø–∞", "–º–∞–∫–∞—Ä–æ–Ω—ã",
            "—Ä–∏—Å", "–≥—Ä–µ—á–∫–∞", "–æ–≤—Å—è–Ω–∫–∞", "–º—É–∫–∞", "—Å–∞—Ö–∞—Ä", "—Å–æ–ª—å", "–ø–µ—Ä–µ—Ü",
            "rewe", "lidl", "aldi", "edeka", "kaufland", "–ø—è—Ç–µ—Ä–æ—á–∫–∞", "–º–∞–≥–Ω–∏—Ç", "–ø–µ—Ä–µ–∫—Ä–µ—Å—Ç–æ–∫"
        ],
        description="–ü—Ä–æ–¥—É–∫—Ç—ã –ø–∏—Ç–∞–Ω–∏—è –∏ –±–∞–∫–∞–ª–µ—è"
    ),
    
    "housing": Category(
        id="housing",
        name="–ñ–∏–ª—å—ë",
        emoji="üè†",
        keywords=[
            "–∞—Ä–µ–Ω–¥–∞", "–∫–≤–∞—Ä—Ç–ø–ª–∞—Ç–∞", "–∫–æ–º–º—É–Ω–∞–ª—å–Ω—ã–µ", "—ç–ª–µ–∫—Ç—Ä–∏—á–µ—Å—Ç–≤–æ", "–≥–∞–∑", "–≤–æ–¥–∞",
            "–æ—Ç–æ–ø–ª–µ–Ω–∏–µ", "–∏–Ω—Ç–µ—Ä–Ω–µ—Ç", "—Ç–µ–ª–µ—Ñ–æ–Ω", "–¥–æ–º–æ—Ñ–æ–Ω", "–ª–∏—Ñ—Ç", "—É–±–æ—Ä–∫–∞",
            "—Ä–µ–º–æ–Ω—Ç", "–º–µ–±–µ–ª—å", "–±—ã—Ç–æ–≤–∞—è —Ç–µ—Ö–Ω–∏–∫–∞", "–æ—Å–≤–µ—â–µ–Ω–∏–µ", "—Å–∞–Ω—Ç–µ—Ö–Ω–∏–∫–∞"
        ],
        description="–†–∞—Å—Ö–æ–¥—ã –Ω–∞ –∂–∏–ª—å–µ –∏ –∫–æ–º–º—É–Ω–∞–ª—å–Ω—ã–µ —É—Å–ª—É–≥–∏"
    ),
    
    "household": Category(
        id="household",
        name="–ë—ã—Ç–æ–≤—ã–µ —Ç–æ–≤–∞—Ä—ã",
        emoji="üßΩ",
        keywords=[
            "–º–æ—é—â–µ–µ —Å—Ä–µ–¥—Å—Ç–≤–æ", "—Å—Ç–∏—Ä–∞–ª—å–Ω—ã–π –ø–æ—Ä–æ—à–æ–∫", "–∫–æ–Ω–¥–∏—Ü–∏–æ–Ω–µ—Ä", "—Ç—É–∞–ª–µ—Ç–Ω–∞—è –±—É–º–∞–≥–∞",
            "—Å–∞–ª—Ñ–µ—Ç–∫–∏", "–≥—É–±–∫–∏", "—â–µ—Ç–∫–∏", "–ø–µ—Ä—á–∞—Ç–∫–∏", "–ø–æ—Å—É–¥–∞", "—Ç–∞—Ä–µ–ª–∫–∏", "—á–∞—à–∫–∏",
            "–∫–∞—Å—Ç—Ä—é–ª–∏", "—Å–∫–æ–≤–æ—Ä–æ–¥—ã", "–ø–æ–ª–æ—Ç–µ–Ω—Ü–∞", "–ø—Ä–æ—Å—Ç—ã–Ω–∏", "–ø–æ–¥—É—à–∫–∏", "–æ–¥–µ—è–ª–∞",
            "–∫–æ–≤—Ä—ã", "–ø—ã–ª–µ—Å–æ—Å", "—à–≤–∞–±—Ä–∞", "–≤–µ–¥—Ä–æ", "—Ç—Ä—è–ø–∫–∏"
        ],
        description="–¢–æ–≤–∞—Ä—ã –¥–ª—è –¥–æ–º–∞ –∏ –±—ã—Ç–∞"
    ),
    
    "transport": Category(
        id="transport",
        name="–¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç",
        emoji="üöó",
        keywords=[
            "–±–µ–Ω–∑–∏–Ω", "–¥–∏–∑–µ–ª—å", "—Ç–æ–ø–ª–∏–≤–æ", "–ø–∞—Ä–∫–æ–≤–∫–∞", "—Å—Ç–æ—è–Ω–∫–∞", "–∞–≤—Ç–æ–±—É—Å",
            "–º–µ—Ç—Ä–æ", "—Ç–∞–∫—Å–∏", "–ø–æ–µ–∑–¥", "—Å–∞–º–æ–ª–µ—Ç", "–±–∏–ª–µ—Ç", "–ø—Ä–æ–µ–∑–¥–Ω–æ–π",
            "shell", "bp", "esso", "–∞–∑—Å", "–∑–∞–ø—Ä–∞–≤–∫–∞", "uber", "—è–Ω–¥–µ–∫—Å —Ç–∞–∫—Å–∏"
        ],
        description="–¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç–Ω—ã–µ —Ä–∞—Å—Ö–æ–¥—ã"
    ),
    
    "utilities": Category(
        id="utilities",
        name="–ö–æ–º–º—É–Ω–∞–ª—å–Ω—ã–µ –∏ —Ç–µ–ª–µ–∫–æ–º–º—É–Ω–∏–∫–∞—Ü–∏–æ–Ω–Ω—ã–µ —É—Å–ª—É–≥–∏",
        emoji="üì±",
        keywords=[
            "–∏–Ω—Ç–µ—Ä–Ω–µ—Ç", "–º–æ–±–∏–ª—å–Ω–∞—è —Å–≤—è–∑—å", "—Ç–µ–ª–µ—Ñ–æ–Ω", "–∫–∞–±–µ–ª—å–Ω–æ–µ", "—Å–ø—É—Ç–Ω–∏–∫–æ–≤–æ–µ",
            "—Ä–æ—É–º–∏–Ω–≥", "sms", "–º–æ–±–∏–ª—å–Ω—ã–π –∏–Ω—Ç–µ—Ä–Ω–µ—Ç", "wifi", "–º–æ–¥–µ–º", "—Ä–æ—É—Ç–µ—Ä"
        ],
        description="–°–≤—è–∑—å –∏ —Ç–µ–ª–µ–∫–æ–º–º—É–Ω–∏–∫–∞—Ü–∏–∏"
    ),
    
    "health": Category(
        id="health",
        name="–ó–¥–æ—Ä–æ–≤—å–µ, –∫—Ä–∞—Å–æ—Ç–∞ –∏ —Å–ø–æ—Ä—Ç",
        emoji="üíä",
        keywords=[
            "–ª–µ–∫–∞—Ä—Å—Ç–≤–æ", "—Ç–∞–±–ª–µ—Ç–∫–∏", "–≤–∏—Ç–∞–º–∏–Ω—ã", "–∞—Å–ø–∏—Ä–∏–Ω", "–ø–∞—Ä–∞—Ü–µ—Ç–∞–º–æ–ª",
            "–π–æ–¥", "–∑–µ–ª–µ–Ω–∫–∞", "–±–∏–Ω—Ç", "–ø–ª–∞—Å—Ç—ã—Ä—å", "–∫—Ä–µ–º", "—à–∞–º–ø—É–Ω—å",
            "–∑—É–±–Ω–∞—è –ø–∞—Å—Ç–∞", "—â–µ—Ç–∫–∞", "–º—ã–ª–æ", "–≥–µ–ª—å", "–¥–µ–∑–æ–¥–æ—Ä–∞–Ω—Ç",
            "–∫–æ—Å–º–µ—Ç–∏–∫–∞", "–ø–æ–º–∞–¥–∞", "—Ç—É—à—å", "—Ç–µ–Ω–∏", "–ª–æ—Å—å–æ–Ω", "–¥—É—Ö–∏",
            "—Ç—Ä–µ–Ω–∞–∂–µ—Ä", "–≥–∞–Ω—Ç–µ–ª–∏", "–º—è—á", "—Ä–∞–∫–µ—Ç–∫–∞", "–ª—ã–∂–∏", "–∫–æ–Ω—å–∫–∏",
            "–≤–µ–ª–æ—Å–∏–ø–µ–¥", "—Ä–æ–ª–∏–∫–∏", "—Å–ø–æ—Ä—Ç", "—Ñ–∏—Ç–Ω–µ—Å", "–π–æ–≥–∞", "–±–∞—Å—Å–µ–π–Ω",
            "apotheke", "pharmacy", "–∞–ø—Ç–µ–∫–∞", "–¥–æ–∫—Ç–æ—Ä", "–º–µ–¥"
        ],
        description="–ó–¥–æ—Ä–æ–≤—å–µ, –∫—Ä–∞—Å–æ—Ç–∞ –∏ —Å–ø–æ—Ä—Ç"
    ),
    
    "clothing": Category(
        id="clothing",
        name="–û–¥–µ–∂–¥–∞ –∏ –æ–±—É–≤—å",
        emoji="üëï",
        keywords=[
            "—Ä—É–±–∞—à–∫–∞", "–±–ª—É–∑–∫–∞", "—Ñ—É—Ç–±–æ–ª–∫–∞", "–±—Ä—é–∫–∏", "–¥–∂–∏–Ω—Å—ã", "–ø–ª–∞—Ç—å–µ",
            "—é–±–∫–∞", "–∫—É—Ä—Ç–∫–∞", "–ø–∞–ª—å—Ç–æ", "–æ–±—É–≤—å", "–∫—Ä–æ—Å—Å–æ–≤–∫–∏", "—Ç—É—Ñ–ª–∏",
            "—Å–∞–ø–æ–≥–∏", "–Ω–æ—Å–∫–∏", "—Ç—Ä—É—Å—ã", "–ª–∏—Ñ—á–∏–∫", "–±–µ–ª—å–µ", "—à–ª—è–ø–∞", "–ø–µ—Ä—á–∞—Ç–∫–∏",
            "h&m", "zara", "uniqlo", "adidas", "nike", "–æ–¥–µ–∂–¥–∞"
        ],
        description="–û–¥–µ–∂–¥–∞ –∏ –æ–±—É–≤—å"
    ),
    
    "education": Category(
        id="education",
        name="–û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ –∏ —Å–∞–º–æ—Ä–∞–∑–≤–∏—Ç–∏–µ",
        emoji="üìö",
        keywords=[
            "–∫–Ω–∏–≥–∏", "—É—á–µ–±–Ω–∏–∫–∏", "–∫—É—Ä—Å—ã", "–æ–±—É—á–µ–Ω–∏–µ", "—Ç—Ä–µ–Ω–∏–Ω–≥–∏", "—Å–µ–º–∏–Ω–∞—Ä—ã",
            "–∫–æ–Ω—Ñ–µ—Ä–µ–Ω—Ü–∏–∏", "–≤–µ–±–∏–Ω–∞—Ä—ã", "–æ–Ω–ª–∞–π–Ω –∫—É—Ä—Å—ã", "—è–∑—ã–∫–∏", "–ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ",
            "–¥–∏–∑–∞–π–Ω", "–º–∞—Ä–∫–µ—Ç–∏–Ω–≥", "–±–∏–∑–Ω–µ—Å", "–ø—Å–∏—Ö–æ–ª–æ–≥–∏—è", "—Å–∞–º–æ—Ä–∞–∑–≤–∏—Ç–∏–µ"
        ],
        description="–û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ –∏ —Å–∞–º–æ—Ä–∞–∑–≤–∏—Ç–∏–µ"
    ),
    
    "entertainment": Category(
        id="entertainment",
        name="–î–æ—Å—É–≥ –∏ —Ä–∞–∑–≤–ª–µ—á–µ–Ω–∏—è",
        emoji="üé¨",
        keywords=[
            "–∫–∏–Ω–æ", "—Ç–µ–∞—Ç—Ä", "–∫–æ–Ω—Ü–µ—Ä—Ç", "–º—É–∑–µ–π", "–≤—ã—Å—Ç–∞–≤–∫–∞", "–ø–∞—Ä–∫",
            "–∞—Ç—Ç—Ä–∞–∫—Ü–∏–æ–Ω—ã", "–∏–≥—Ä—ã", "—Ä–∞–∑–≤–ª–µ—á–µ–Ω–∏—è", "–æ—Ç–¥—ã—Ö", "–æ—Ç–ø—É—Å–∫",
            "–ø—É—Ç–µ—à–µ—Å—Ç–≤–∏–µ", "–æ—Ç–µ–ª—å", "–±–∏–ª–µ—Ç—ã", "–º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è"
        ],
        description="–î–æ—Å—É–≥ –∏ —Ä–∞–∑–≤–ª–µ—á–µ–Ω–∏—è"
    ),
    
    "gifts": Category(
        id="gifts",
        name="–ü–æ–¥–∞—Ä–∫–∏ –∏ –±–ª–∞–≥–æ—Ç–≤–æ—Ä–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å",
        emoji="üéÅ",
        keywords=[
            "–ø–æ–¥–∞—Ä–æ–∫", "–ø–æ–¥–∞—Ä–∫–∏", "—Å—É–≤–µ–Ω–∏—Ä", "—Ü–≤–µ—Ç—ã", "–±—É–∫–µ—Ç", "–ø–æ–∑–¥—Ä–∞–≤–ª–µ–Ω–∏–µ",
            "–¥–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è", "–Ω–æ–≤—ã–π –≥–æ–¥", "—Ä–æ–∂–¥–µ—Å—Ç–≤–æ", "8 –º–∞—Ä—Ç–∞", "23 —Ñ–µ–≤—Ä–∞–ª—è",
            "–±–ª–∞–≥–æ—Ç–≤–æ—Ä–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å", "–ø–æ–∂–µ—Ä—Ç–≤–æ–≤–∞–Ω–∏–µ", "–ø–æ–º–æ—â—å", "—Ñ–æ–Ω–¥"
        ],
        description="–ü–æ–¥–∞—Ä–∫–∏ –∏ –±–ª–∞–≥–æ—Ç–≤–æ—Ä–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å"
    ),
    
    "other": Category(
        id="other",
        name="–ü—Ä–æ—á–∏–µ —Ä–∞—Å—Ö–æ–¥—ã",
        emoji="üì¶",
        keywords=[
            "–ø—Ä–æ—á–µ–µ", "—Ä–∞–∑–Ω–æ–µ", "–Ω–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–µ", "—Å–ª—É—á–∞–π–Ω—ã–µ", "–Ω–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω—ã–µ"
        ],
        description="–ü—Ä–æ—á–∏–µ —Ä–∞—Å—Ö–æ–¥—ã"
    ),
    
    "banking": Category(
        id="banking",
        name="–ë–∞–Ω–∫–æ–≤—Å–∫–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–∏",
        emoji="üè¶",
        keywords=[
            "–∫–æ–º–∏—Å—Å–∏—è", "–æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ", "–ø–µ—Ä–µ–≤–æ–¥", "–∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è", "—Å–Ω—è—Ç–∏–µ",
            "–ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ", "–∫—Ä–µ–¥–∏—Ç", "–∑–∞–π–º", "–ø—Ä–æ—Ü–µ–Ω—Ç—ã", "—à—Ç—Ä–∞—Ñ", "–ø–µ–Ω—è"
        ],
        description="–ë–∞–Ω–∫–æ–≤—Å–∫–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ –∏ –∫–æ–º–∏—Å—Å–∏–∏"
    ),
    
    "software": Category(
        id="software",
        name="–ü—Ä–æ–≥—Ä–∞–º–º–Ω–æ–µ –æ–±–µ—Å–ø–µ—á–µ–Ω–∏–µ",
        emoji="üíª",
        keywords=[
            "–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ", "–ø—Ä–æ–≥—Ä–∞–º–º–∞", "—Å–æ—Ñ—Ç", "–ø–æ–¥–ø–∏—Å–∫–∞", "–ª–∏—Ü–µ–Ω–∑–∏—è",
            "app store", "google play", "steam", "netflix", "spotify",
            "youtube premium", "adobe", "microsoft", "office"
        ],
        description="–ü—Ä–æ–≥—Ä–∞–º–º–Ω–æ–µ –æ–±–µ—Å–ø–µ—á–µ–Ω–∏–µ –∏ –ø–æ–¥–ø–∏—Å–∫–∏"
    ),
    
    "electronics": Category(
        id="electronics",
        name="–¢–µ—Ö–Ω–∏–∫–∞",
        emoji="üì±",
        keywords=[
            "—Ç–µ–ª–µ—Ñ–æ–Ω", "—Å–º–∞—Ä—Ç—Ñ–æ–Ω", "–∫–æ–º–ø—å—é—Ç–µ—Ä", "–Ω–æ—É—Ç–±—É–∫", "–ø–ª–∞–Ω—à–µ—Ç",
            "–Ω–∞—É—à–Ω–∏–∫–∏", "–∫–æ–ª–æ–Ω–∫–∏", "–∫–∞–±–µ–ª—å", "–∑–∞—Ä—è–¥–∫–∞", "–∞–¥–∞–ø—Ç–µ—Ä",
            "–º—ã—à—å", "–∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞", "–º–æ–Ω–∏—Ç–æ—Ä", "–ø—Ä–∏–Ω—Ç–µ—Ä", "—Ä–æ—É—Ç–µ—Ä",
            "media markt", "saturn", "apple", "samsung", "—ç–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∞"
        ],
        description="–≠–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∞ –∏ —Ç–µ—Ö–Ω–∏–∫–∞"
    ),
    
    "eating_out": Category(
        id="eating_out",
        name="–ï–¥–∞ –≤–Ω–µ –¥–æ–º–∞",
        emoji="üçΩÔ∏è",
        keywords=[
            "—Ä–µ—Å—Ç–æ—Ä–∞–Ω", "–∫–∞—Ñ–µ", "–±–∞—Ä", "–ø–∏—Ü—Ü–µ—Ä–∏—è", "—Å—É—à–∏", "–±—É—Ä–≥–µ—Ä",
            "mcdonalds", "kfc", "burger king", "subway", "–ø–∏—Ü—Ü–∞",
            "–æ–±–µ–¥", "—É–∂–∏–Ω", "–∑–∞–≤—Ç—Ä–∞–∫", "–∫–æ—Ñ–µ", "–ª–∞—Ç—Ç–µ", "–∫–∞–ø—É—á–∏–Ω–æ",
            "–¥–æ—Å—Ç–∞–≤–∫–∞", "–µ–¥–∞ –Ω–∞ –≤—ã–Ω–æ—Å", "—Å—Ç–æ–ª–æ–≤–∞—è", "–±—É—Ñ–µ—Ç"
        ],
        description="–ü–∏—Ç–∞–Ω–∏–µ –≤–Ω–µ –¥–æ–º–∞"
    )
}


# –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ –¥–æ—Ö–æ–¥–æ–≤
INCOME_CATEGORIES = {
    "salary": Category(
        id="salary",
        name="–ó–∞—Ä–ø–ª–∞—Ç–∞",
        emoji="üí∞",
        keywords=[
            "–∑–∞—Ä–ø–ª–∞—Ç–∞", "–æ–∫–ª–∞–¥", "–∑–∞—Ä–∞–±–æ—Ç–Ω–∞—è –ø–ª–∞—Ç–∞", "–∞–≤–∞–Ω—Å", "–ø—Ä–µ–º–∏—è", "–±–æ–Ω—É—Å",
            "–¥–æ–ø–ª–∞—Ç–∞", "–Ω–∞–¥–±–∞–≤–∫–∞", "—Ç—Ä–∏–Ω–∞–¥—Ü–∞—Ç–∞—è –∑–∞—Ä–ø–ª–∞—Ç–∞", "–æ—Ç–ø—É—Å–∫–Ω—ã–µ", "–±–æ–ª—å–Ω–∏—á–Ω—ã–µ"
        ],
        description="–ó–∞—Ä–∞–±–æ—Ç–Ω–∞—è –ø–ª–∞—Ç–∞ –∏ —Å–≤—è–∑–∞–Ω–Ω—ã–µ –≤—ã–ø–ª–∞—Ç—ã"
    ),
    
    "freelance": Category(
        id="freelance",
        name="–§—Ä–∏–ª–∞–Ω—Å",
        emoji="üíª",
        keywords=[
            "—Ñ—Ä–∏–ª–∞–Ω—Å", "–ø—Ä–æ–µ–∫—Ç", "–∑–∞–∫–∞–∑", "–∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è", "—Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞",
            "–¥–∏–∑–∞–π–Ω", "–∫–æ–ø–∏—Ä–∞–π—Ç–∏–Ω–≥", "–ø–µ—Ä–µ–≤–æ–¥—ã", "—Ä–µ–ø–µ—Ç–∏—Ç–æ—Ä—Å—Ç–≤–æ", "—É—Å–ª—É–≥–∏",
            "–ø–æ–¥—Ä–∞–±–æ—Ç–∫–∞", "—Å–∞–º–æ–∑–∞–Ω—è—Ç–æ—Å—Ç—å"
        ],
        description="–î–æ—Ö–æ–¥—ã –æ—Ç —Ñ—Ä–∏–ª–∞–Ω—Å–∞ –∏ –ø–æ–¥—Ä–∞–±–æ—Ç–∫–∏"
    ),
    
    "business": Category(
        id="business",
        name="–ë–∏–∑–Ω–µ—Å",
        emoji="üè¢",
        keywords=[
            "–±–∏–∑–Ω–µ—Å", "–ø—Ä–∏–±—ã–ª—å", "–¥–æ—Ö–æ–¥ –æ—Ç –±–∏–∑–Ω–µ—Å–∞", "–ø—Ä–æ–¥–∞–∂–∏", "–≤—ã—Ä—É—á–∫–∞",
            "–ø—Ä–µ–¥–ø—Ä–∏–Ω–∏–º–∞—Ç–µ–ª—å—Å—Ç–≤–æ", "–∏–ø", "–æ–æ–æ", "—Ç–æ—Ä–≥–æ–≤–ª—è", "—É—Å–ª—É–≥–∏"
        ],
        description="–î–æ—Ö–æ–¥—ã –æ—Ç –ø—Ä–µ–¥–ø—Ä–∏–Ω–∏–º–∞—Ç–µ–ª—å—Å–∫–æ–π –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç–∏"
    ),
    
    "investments": Category(
        id="investments",
        name="–ò–Ω–≤–µ—Å—Ç–∏—Ü–∏–∏",
        emoji="üìà",
        keywords=[
            "–¥–∏–≤–∏–¥–µ–Ω–¥—ã", "–ø—Ä–æ—Ü–µ–Ω—Ç—ã", "–∞–∫—Ü–∏–∏", "–æ–±–ª–∏–≥–∞—Ü–∏–∏", "–¥–µ–ø–æ–∑–∏—Ç",
            "–∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–∏", "–¥–æ—Ö–æ–¥–Ω–æ—Å—Ç—å", "–ø—Ä–∏–±—ã–ª—å", "—Ä–µ–Ω—Ç–∞", "–∫—É–ø–æ–Ω—ã",
            "–∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–∞", "forex", "—Ç—Ä–µ–π–¥–∏–Ω–≥"
        ],
        description="–î–æ—Ö–æ–¥—ã –æ—Ç –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–π –∏ —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã—Ö –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤"
    ),
    
    "gifts": Category(
        id="gifts",
        name="–ü–æ–¥–∞—Ä–∫–∏",
        emoji="üéÅ",
        keywords=[
            "–ø–æ–¥–∞—Ä–æ–∫", "–ø–æ–¥–∞—Ä–∫–∏", "–¥–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è", "–Ω–æ–≤—ã–π –≥–æ–¥", "–ø—Ä–∞–∑–¥–Ω–∏–∫",
            "–¥–µ–Ω–µ–∂–Ω—ã–π –ø–æ–¥–∞—Ä–æ–∫", "–ø–æ–∑–¥—Ä–∞–≤–ª–µ–Ω–∏–µ", "—Å—É–≤–µ–Ω–∏—Ä"
        ],
        description="–ü–æ–¥–∞—Ä–∫–∏ –∏ –¥–µ–Ω–µ–∂–Ω—ã–µ –ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏—è –æ—Ç –±–ª–∏–∑–∫–∏—Ö"
    ),
    
    "refunds": Category(
        id="refunds",
        name="–í–æ–∑–≤—Ä–∞—Ç—ã",
        emoji="‚Ü©Ô∏è",
        keywords=[
            "–≤–æ–∑–≤—Ä–∞—Ç", "–≤–æ–∑–º–µ—â–µ–Ω–∏–µ", "–∫–æ–º–ø–µ–Ω—Å–∞—Ü–∏—è", "—Å—Ç—Ä–∞—Ö–æ–≤–∫–∞", "–≥–∞—Ä–∞–Ω—Ç–∏—è",
            "—Ä–µ—Ñ–∞–Ω–¥", "–∫–µ—à–±—ç–∫", "cashback", "—Å–∫–∏–¥–∫–∞", "–±–æ–Ω—É—Å—ã", "–≤–æ–∑–≤—Ä–∞—Ç –Ω–∞–ª–æ–≥–æ–≤"
        ],
        description="–í–æ–∑–≤—Ä–∞—Ç—ã, –∫–æ–º–ø–µ–Ω—Å–∞—Ü–∏–∏ –∏ –≤–æ–∑–º–µ—â–µ–Ω–∏—è"
    ),
    
    "rent": Category(
        id="rent",
        name="–ê—Ä–µ–Ω–¥–∞",
        emoji="üè†",
        keywords=[
            "–∞—Ä–µ–Ω–¥–∞", "—Å–¥–∞—á–∞", "–∞—Ä–µ–Ω–¥–Ω–∞—è –ø–ª–∞—Ç–∞", "–∫–≤–∞—Ä—Ç–∏—Ä–∞", "–Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç—å",
            "–∂–∏–ª—å–µ", "–∫–æ–º–Ω–∞—Ç–∞", "–¥–∞—á–∞", "–≥–∞—Ä–∞–∂", "—Å–∫–ª–∞–¥"
        ],
        description="–î–æ—Ö–æ–¥—ã –æ—Ç —Å–¥–∞—á–∏ –≤ –∞—Ä–µ–Ω–¥—É –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏"
    ),
    
    "social": Category(
        id="social",
        name="–°–æ—Ü–∏–∞–ª—å–Ω—ã–µ –≤—ã–ø–ª–∞—Ç—ã",
        emoji="üèõÔ∏è",
        keywords=[
            "–ø–µ–Ω—Å–∏—è", "–ø–æ—Å–æ–±–∏–µ", "—Å—Ç–∏–ø–µ–Ω–¥–∏—è", "–∞–ª–∏–º–µ–Ω—Ç—ã", "—Å—É–±—Å–∏–¥–∏—è",
            "–ª—å–≥–æ—Ç—ã", "–º–∞—Ç–µ—Ä–∏–Ω—Å–∫–∏–π –∫–∞–ø–∏—Ç–∞–ª", "–¥–µ—Ç—Å–∫–∏–µ", "–±–µ–∑—Ä–∞–±–æ—Ç–∏—Ü–∞"
        ],
        description="–°–æ—Ü–∏–∞–ª—å–Ω—ã–µ –≤—ã–ø–ª–∞—Ç—ã –∏ –ø–æ—Å–æ–±–∏—è"
    ),
    
    "other_income": Category(
        id="other_income",
        name="–ü—Ä–æ—á–∏–µ –¥–æ—Ö–æ–¥—ã",
        emoji="üíµ",
        keywords=[
            "–ø—Ä–æ—á–µ–µ", "—Ä–∞–∑–Ω–æ–µ", "–¥—Ä—É–≥–æ–µ", "–Ω–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–µ", "—Å–ª—É—á–∞–π–Ω—ã–µ",
            "–Ω–∞—Ö–æ–¥–∫–∞", "–≤—ã–∏–≥—Ä—ã—à", "–ø—Ä–∏–∑", "–ª–æ—Ç–µ—Ä–µ—è"
        ],
        description="–ü—Ä–æ—á–∏–µ –¥–æ—Ö–æ–¥—ã"
    )
}


def get_category_by_id(category_id: str) -> Optional[Category]:
    """–ü–æ–ª—É—á–∏—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é –ø–æ ID"""
    return STANDARD_CATEGORIES.get(category_id)


def get_category_by_name(name: str) -> Optional[Category]:
    """–ü–æ–ª—É—á–∏—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é"""
    for category in STANDARD_CATEGORIES.values():
        if category.name.lower() == name.lower():
            return category
    return None


def get_all_categories() -> Dict[str, Category]:
    """–ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏"""
    return STANDARD_CATEGORIES.copy()


def get_categories_list() -> List[Category]:
    """–ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π"""
    return list(STANDARD_CATEGORIES.values())


def search_categories_by_keyword(keyword: str) -> List[Category]:
    """–ü–æ–∏—Å–∫ –∫–∞—Ç–µ–≥–æ—Ä–∏–π –ø–æ –∫–ª—é—á–µ–≤–æ–º—É —Å–ª–æ–≤—É"""
    keyword_lower = keyword.lower()
    matching_categories = []
    
    for category in STANDARD_CATEGORIES.values():
        # –ü–æ–∏—Å–∫ –≤ –Ω–∞–∑–≤–∞–Ω–∏–∏
        if keyword_lower in category.name.lower():
            matching_categories.append(category)
            continue
            
        # –ü–æ–∏—Å–∫ –≤ –∫–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤–∞—Ö
        for cat_keyword in category.keywords:
            if keyword_lower in cat_keyword.lower():
                matching_categories.append(category)
                break
    
    return matching_categories


def get_category_keywords_dict() -> Dict[str, List[str]]:
    """–ü–æ–ª—É—á–∏—Ç—å —Å–ª–æ–≤–∞—Ä—å –∫–∞—Ç–µ–≥–æ—Ä–∏–π –∏ –∏—Ö –∫–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤ –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏"""
    return {category.name: category.keywords for category in STANDARD_CATEGORIES.values()}


def format_category_for_display(category: Category) -> str:
    """–§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è"""
    return f"{category.emoji} {category.name}"


def format_categories_list(categories: List[Category] = None) -> str:
    """–§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞—Ç—å —Å–ø–∏—Å–æ–∫ –∫–∞—Ç–µ–≥–æ—Ä–∏–π –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è"""
    if categories is None:
        categories = get_categories_list()
    
    lines = ["üìã –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏:"]
    for category in categories:
        lines.append(f"{category.emoji} {category.name}")
    
    return "\n".join(lines)


def is_valid_category(category_name: str) -> bool:
    """–ü—Ä–æ–≤–µ—Ä–∏—Ç—å, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—è –≤–∞–ª–∏–¥–Ω–æ–π (—Å—É—â–µ—Å—Ç–≤—É–µ—Ç –≤ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏—è—Ö)"""
    if not category_name:
        return False
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–æ—á–Ω–æ–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é
    for category in STANDARD_CATEGORIES.values():
        if category.name.lower() == category_name.lower():
            return True
    
    return False


def validate_and_normalize_category(category_name: str) -> Optional[str]:
    """–í–∞–ª–∏–¥–∏—Ä–æ–≤–∞—Ç—å –∏ –Ω–æ—Ä–º–∞–ª–∏–∑–æ–≤–∞—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏.
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –Ω–æ—Ä–º–∞–ª–∏–∑–æ–≤–∞–Ω–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∏–ª–∏ None, –µ—Å–ª–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—è –Ω–µ–≤–∞–ª–∏–¥–Ω–∞."""
    if not category_name:
        return None
    
    # –ò—â–µ–º —Ç–æ—á–Ω–æ–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é
    for category in STANDARD_CATEGORIES.values():
        if category.name.lower() == category_name.lower():
            return category.name
    
    return None


# –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º–∏ –¥–æ—Ö–æ–¥–æ–≤
def get_income_categories_list() -> List[Category]:
    """–ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π –¥–æ—Ö–æ–¥–æ–≤"""
    return list(INCOME_CATEGORIES.values())


def get_income_category_by_name(name: str) -> Optional[Category]:
    """–ü–æ–ª—É—á–∏—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é –¥–æ—Ö–æ–¥–æ–≤ –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é"""
    for category in INCOME_CATEGORIES.values():
        if category.name.lower() == name.lower():
            return category
    return None


def get_income_category_by_id(category_id: str) -> Optional[Category]:
    """–ü–æ–ª—É—á–∏—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é –¥–æ—Ö–æ–¥–æ–≤ –ø–æ ID"""
    return INCOME_CATEGORIES.get(category_id)


def search_income_categories_by_keyword(keyword: str) -> List[Category]:
    """–ü–æ–∏—Å–∫ –∫–∞—Ç–µ–≥–æ—Ä–∏–π –¥–æ—Ö–æ–¥–æ–≤ –ø–æ –∫–ª—é—á–µ–≤–æ–º—É —Å–ª–æ–≤—É"""
    keyword_lower = keyword.lower()
    matching_categories = []
    
    for category in INCOME_CATEGORIES.values():
        # –ü–æ–∏—Å–∫ –≤ –Ω–∞–∑–≤–∞–Ω–∏–∏
        if keyword_lower in category.name.lower():
            matching_categories.append(category)
            continue
            
        # –ü–æ–∏—Å–∫ –≤ –∫–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤–∞—Ö
        for cat_keyword in category.keywords:
            if keyword_lower in cat_keyword.lower():
                matching_categories.append(category)
                break
    
    return matching_categories


def validate_and_normalize_income_category(category_name: str) -> Optional[str]:
    """–í–∞–ª–∏–¥–∏—Ä–æ–≤–∞—Ç—å –∏ –Ω–æ—Ä–º–∞–ª–∏–∑–æ–≤–∞—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –¥–æ—Ö–æ–¥–æ–≤.
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –Ω–æ—Ä–º–∞–ª–∏–∑–æ–≤–∞–Ω–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∏–ª–∏ None, –µ—Å–ª–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—è –Ω–µ–≤–∞–ª–∏–¥–Ω–∞."""
    if not category_name:
        return None
    
    # –ò—â–µ–º —Ç–æ—á–Ω–æ–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é
    for category in INCOME_CATEGORIES.values():
        if category.name.lower() == category_name.lower():
            return category.name
    
    return None


def income_categories_kb(*, include_back=False, include_cancel=False) -> 'ReplyKeyboardMarkup':
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–π –¥–æ—Ö–æ–¥–æ–≤"""
    from telegram import ReplyKeyboardMarkup
    
    categories = get_income_categories_list()
    # –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫–∏ –ø–æ 2 –≤ —Ä—è–¥ –¥–ª—è —ç–∫–æ–Ω–æ–º–∏–∏ –º–µ—Å—Ç–∞
    rows = []
    for i in range(0, len(categories), 2):
        row = [format_category_for_display(categories[i])]
        if i + 1 < len(categories):
            row.append(format_category_for_display(categories[i + 1]))
        rows.append(row)
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
    tail = []
    if include_back:
        tail.append("‚¨ÖÔ∏è –ù–∞–∑–∞–¥")
    if include_cancel:
        tail.append("–û—Ç–º–µ–Ω–∞")
    if tail:
        rows.append(tail)
    
    return ReplyKeyboardMarkup(rows, resize_keyboard=True)
